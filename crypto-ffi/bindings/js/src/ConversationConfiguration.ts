import {
    Ciphersuite,
    ConversationConfiguration as ConversationConfigurationFfi,
    ExternalSenderKey,
    WirePolicy,
} from "./autogenerated/core-crypto-ffi.js";

export interface ConversationConfiguration {
    /**
     * The ciphersuite which should be used to encrypt this conversation.
     */
    ciphersuite?: Ciphersuite;
    /**
     * List of client IDs that are allowed to be external senders
     */
    externalSenders?: ExternalSenderKey[];
    /**
     *  Duration in seconds after which we will automatically force a self-update commit
     *  Note: This isn't currently implemented
     */
    keyRotationSpan?: number;
    /**
     * Defines if handshake messages are encrypted or not
     * Note: encrypted handshake messages are not supported by wire-server
     */
    wirePolicy?: WirePolicy;
}

export function conversationConfigurationToFfi(
    cc: ConversationConfiguration
): ConversationConfigurationFfi {
    return new ConversationConfigurationFfi(
        cc.ciphersuite,
        cc.externalSenders,
        cc.keyRotationSpan,
        cc.wirePolicy
    );
}
