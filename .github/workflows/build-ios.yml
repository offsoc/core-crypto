concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-build-ios"
  cancel-in-progress: true

on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  build-ios:
    if: github.repository == 'wireapp/core-crypto'
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - task: ios-device
            target: aarch64-apple-ios
          - task: ios-simulator-arm
            target: aarch64-apple-ios-sim
    steps:
      - uses: actions/checkout@v4
      - name: Setup rust macOS
        uses: ./.github/actions/setup-and-cache-rust
        with:
          target: ${{ matrix.target }}

      - name: build ${{ matrix.task }}
        run: |
          make ${{ matrix.task }}

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.event.number}}-${{ matrix.task }}
          path: target
          retention-days: 1
          overwrite: 'true'
      # Only needs to be uploaded once, this step finishes fastest.
      - name: upload ffi artifact
        if: startsWith(matrix.task, 'ios-simulator-arm')
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.event.number}}-swift-ffi
          path: crypto-ffi/bindings/swift/WireCoreCryptoUniffi
          retention-days: 1
          overwrite: 'true'
